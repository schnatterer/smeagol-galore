name: Build
on:
  push:
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: smeagol-galore
      - name: smoke test
        run: |
          # Use the local image for tests, instead of the one from DockerHub
          echo 'IMAGE=smeagol-galore' > example/.env
          cd example && docker-compose -f docker-compose-general.yaml up -d
          # Wait for smeagol-galore to startup
          sleep 60 && echo "Finish sleeping"
          # Do some basic sanity checks with the container
          ../test.sh

      # TODO run tests on other examples as well (using BATS?)
      # do the same for basic setup (Faster without plugin installs) 
      # do the same for internal network example
      # do the same for internal network example with hostname  - echo '172.1.2.2   smeagol' > /etc/hosts
      #  do the same with binding to port 443
  
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # defaults: schedule and ref types
          # Additional: Set sha tag for each image
          # And: Main branch is latest for now 
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,prefix=,format=short
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=latest
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
